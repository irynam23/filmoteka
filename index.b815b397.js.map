{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,GCAAD,EAAAC,EAAA,S,yBAKA,MAAMC,EAAaC,SAASC,cAAc,SACpCC,EAAcF,SAASC,cAAc,WACrCE,EAAeH,SAASC,cAAc,iBACrC,IAAIG,EAAW,GAyCfC,eAAeC,EAAUC,EAAMC,GACpC,MAAMC,KAAEA,SAAeZ,EAAAa,QAAMC,IAC3B,4FAA4FJ,UAAaC,KAG3G,OAAOC,C,CA7CTP,EAAYU,iBAAiB,SAASC,IACpCV,EAAaW,UAAUC,IAAI,QAAQ,IAGrChB,EAAWa,iBAAiB,UAE5BP,eAA0BQ,GACxBA,EAAMG,iBACNC,EAAAC,QAAQC,WACRF,EAAAC,QAAQE,OAAO,KACf,MACEC,UAAUC,OAAEA,IACVT,EAAMU,cAGV,GAFAnB,EAAWkB,EAAOE,MAEdF,EAAOE,MAAMC,OAAS,EAIxB,OAHAC,EAAAC,OAAOC,QAAQ,4DACff,EAAMU,cAAcM,aACpB3B,EAAYsB,MAAQ,IAGtB,IACE,MAAMM,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,SAAsBzB,EAAUF,EAAS4B,OAAQ,GAElEC,EAAYjC,SAASC,cAAc,gBACrCgC,IACFA,EAAUC,UAAY,IAEpBC,MAAMC,QAAQN,IAAYA,EAAQL,QACpCY,EAAaP,GACbQ,EAAW,EAAGP,KAEd5B,EAAaW,UAAUM,OAAO,SAC9BlB,EAAYsB,MAAQ,GACpBc,EAAW,EAAG,G,CAEhB,MAAOC,GACPC,QAAQC,IAAIF,E,KC1ChB,MAAMG,EAAgB1C,SAASC,cAAc,yBAC7C,IAAI0C,EAAoB,EAEjB,SAASL,EAAWM,EAAaC,GACtC,IAAIC,EAAS,GACTC,EAAgBH,EAAc,EAC9BI,EAAaJ,EAAc,EAC3BK,EAAYL,EAAc,EAC1BM,EAAeN,EAAc,EACjCD,EAAoBC,EACpBJ,QAAQC,IAAI,sBAAuBG,EAAaC,GAC5CD,EAAc,IAChBE,GAAU,0DACVA,GAAU,uCAERK,OAAOC,YAAc,KACnBR,EAAc,IAChBE,GAAU,qDAERF,EAAc,IAChBE,GAAU,iCAAiCC,UAEzCH,EAAc,IAChBE,GAAU,iCAAiCE,UAE7CF,GAAU,yDAAyDF,SAC/DC,EAAW,EAAID,IACjBE,GAAU,iCAAiCG,UAEzCJ,EAAW,EAAID,IACjBE,GAAU,gCAAgCI,UAExCL,EAAW,EAAID,IACjBE,GAAU,oDAERD,EAAWD,IACbE,GAAU,iCAAiCD,SAC3CC,GAAU,8DAGRF,EAAc,IAChBE,GAAU,iCAAiCC,UAEzCH,EAAc,IAChBE,GAAU,iCAAiCE,UAE7CF,GAAU,yDAAyDF,SAC/DC,EAAW,EAAID,IACjBE,GAAU,iCAAiCG,UAEzCJ,EAAW,EAAID,IACjBE,GAAU,gCAAgCI,UAExCL,EAAWD,IACbE,GAAU,iCAAiCD,SAC3CC,GAAU,6DAGTD,IACHC,EAAS,IAEXJ,EAAcR,UAAYY,EAE1BK,OAAOE,SAAS,CACdC,IAAK,EACLC,SAAU,U,CAGdb,EAAc9B,iBAAiB,SAC/B,SAA2B4C,GACzB,GAAKpD,EAgCE,CACL,GAA4B,OAAxBoD,EAAIC,OAAOC,SACb,OAEF,GAA+B,QAA3BF,EAAIC,OAAOE,YACb,OAEF,GAA+B,OAA3BH,EAAIC,OAAOE,YAOb,YANArD,EAAUF,EAAWuC,GAAqB,GAAIiB,MAC5C,EAAC9B,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,MAChBM,EAAaP,GACbQ,EAAW9B,EAAMuB,EAAY,IAKnC,GAA+B,OAA3ByB,EAAIC,OAAOE,YAOb,YANArD,EAAUF,EAAWuC,GAAqB,GAAIiB,MAC5C,EAAC9B,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,MAChBM,EAAaP,GACbQ,EAAW9B,EAAMuB,EAAY,IAMnC,MAAM8B,EAAOL,EAAIC,OAAOE,YAExBrD,EAAUF,EAAUyD,GAAMD,MAAK,EAAC9B,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,MAC/CM,EAAaP,GACbQ,EAAW9B,EAAMuB,EAAY,G,KA9DlB,CACb,GAA4B,OAAxByB,EAAIC,OAAOC,SACb,OAEF,GAA+B,QAA3BF,EAAIC,OAAOE,YACb,OAEF,GAA+B,OAA3BH,EAAIC,OAAOE,YAOb,YANAG,EAAYnB,GAAqB,GAAIiB,MACnC,EAAC9B,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,MAChBM,EAAaP,GACbQ,EAAW9B,EAAMuB,EAAY,IAKnC,GAA+B,OAA3ByB,EAAIC,OAAOE,YAOb,YANAG,EAAYnB,GAAqB,GAAIiB,MACnC,EAAC9B,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,MAChBM,EAAaP,GACbQ,EAAW9B,EAAMuB,EAAY,IAQnC+B,EAFaN,EAAIC,OAAOE,aAEPC,MAAK,EAAC9B,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,MACtCM,EAAaP,GACbQ,EAAW9B,EAAMuB,EAAY,G,KFtG5B,MAAMgC,EAAY/D,SAASC,cAAc,gBAIf,kBAA7BkD,OAAOa,SAASC,UAsCpB5D,iBACE,IACE,MAAMyB,QAAEA,EAAOtB,KAAEA,EAAIuB,YAAEA,SAAsB+B,IAC7CI,QAQG7D,iBACL,MAAMI,KAAEA,SAAeZ,EAAAa,QAAMC,IAC3B,0FAEF,OAAOF,EAAK0D,M,CAZKC,GACf/B,EAAaP,GACbQ,EAAW,EAAGP,E,CACd,MAAOQ,GACPC,QAAQC,IAAIF,E,EA5Cd8B,GAGF,IAAIH,EAAS,GAEN7D,eAAeyD,EAAWQ,EAAO,GACtC,MAAM7D,KAAEA,SAAeZ,EAAAa,QAAMC,IAC3B,kGAAkG2D,KAGpG,OAAO7D,C,CAGF,SAAS4B,EAAakC,GAC3BR,EAAU7B,UAAY,GACtB,MAAMY,EAASyB,EACZC,KAAIC,GACI,oCAAoCA,EAAMC,6IAMLD,EAAME,4GAInBF,EAAMG,gDA4BpC,SAAuBC,EAAWC,GACvC,MAAMC,EAAaF,EAAUG,QAAO,CAACC,EAAKC,IACpCJ,EAASK,SAASD,EAAMR,IACnB,IAAIO,EAAKC,EAAM3E,MAEjB0E,GACN,IACH,OAAOF,EAAWtD,OAAS,EAAIsD,EAAWK,MAAM,EAAG,GAAKL,C,CAlCvBM,CAAcnB,EAAQO,EAAMa,WAAWC,KAC9D,WACKd,EAAMe,aAAaC,MAAM,KAAK,0BAG1CF,KAAK,IACRxB,EAAU2B,mBAAmB,YAAa5C,E","sources":["src/js/popular.js","src/js/search.js","src/js/pagination.js"],"sourcesContent":["import axios from 'axios';\nimport { pagination } from './pagination.js';\nexport const cardsList = document.querySelector('.cards__list');\nlet TOTAL_PAGES = 0;\nlet page = 1;\n\nif (window.location.pathname !== '/library.html') {\n  loadPopular();\n}\n\nlet GENRES = [];\n\nexport async function getPopular(page = 1) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=004aa31770cc2729c6dd319813b8b5dc&page=${page}`\n  );\n\n  return data;\n}\n\nexport function renderMarkup(movies) {\n  cardsList.innerHTML = '';\n  const markup = movies\n    .map(movie => {\n      return `<li class=\"cards__item\" data-id=\"${movie.id}\">\n\n     \n          <img\n            class=\"cards__photo\"\n            alt=\"movie\"\n            src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\"\n            \n            loading=\"lazy\"\n          />\n          <h3 class=\"cards__title\">${movie.title}</h3>\n          <p class=\"cards__info\">${getGenresName(GENRES, movie.genre_ids).join(\n            ', '\n          )} | ${movie.release_date.split('-')[0]}</p>\n        </li>`;\n    })\n    .join('');\n  cardsList.insertAdjacentHTML('beforeend', markup);\n}\n\nasync function loadPopular() {\n  try {\n    const { results, page, total_pages } = await getPopular();\n    GENRES = await getGenres();\n    renderMarkup(results);\n    pagination(1, total_pages);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getGenres() {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=004aa31770cc2729c6dd319813b8b5dc'\n  );\n  return data.genres;\n}\n\nexport function getGenresName(allGenres, genreIds) {\n  const genresName = allGenres.reduce((acc, genre) => {\n    if (genreIds.includes(genre.id)) {\n      return [...acc, genre.name];\n    }\n    return acc;\n  }, []);\n  return genresName.length > 2 ? genresName.slice(0, 2) : genresName;\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { renderMarkup } from './popular';\nimport { pagination } from './pagination.js';\nconst searchForm = document.querySelector('.form');\nconst searchInput = document.querySelector('#search');\nconst notification = document.querySelector('.notification');\nexport let searched = '';\nsearchInput.addEventListener('keyup', event => {\n  notification.classList.add('close');\n});\n\nsearchForm.addEventListener('submit', searchFilm);\n\nasync function searchFilm(event) {\n  event.preventDefault();\n  Loading.standard();\n  Loading.remove(800);\n  const {\n    elements: { search },\n  } = event.currentTarget;\n  searched = search.value;\n\n  if (search.value.length < 2) {\n    Notify.warning('Its name too short.Enter the correct movie name, please.');\n    event.currentTarget.reset();\n    searchInput.value = '';\n    return;\n  }\n  try {\n    const { results, page, total_pages } = await getByName(searched.trim(), 1);\n\n    const cardsList = document.querySelector('.cards__list');\n    if (cardsList) {\n      cardsList.innerHTML = '';\n    }\n    if (Array.isArray(results) && results.length) {\n      renderMarkup(results);\n      pagination(1, total_pages);\n    } else {\n      notification.classList.remove('close');\n      searchInput.value = '';\n      pagination(0, 0);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getByName(name, page) {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=004aa31770cc2729c6dd319813b8b5dc&query=${name}&page=${page}`\n  );\n\n  return data;\n}\n","import { getPopular } from './popular.js';\nimport { getByName } from './search';\nimport { searched } from './search';\nimport { renderMarkup } from './popular.js';\nconst paginationBox = document.querySelector('.pagination-container');\nlet globalCurrentpage = 0;\n\nexport function pagination(currentPage, allPages) {\n  let markup = '';\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n  globalCurrentpage = currentPage;\n  console.log('currentPage,allPage', currentPage, allPages);\n  if (currentPage > 1) {\n    markup += `<li class=\"pagination__item arrow-left\" >&#129144;</li>`;\n    markup += `<li class=\"pagination__item\">1</li>`;\n  }\n  if (window.innerWidth >= 768) {\n    if (currentPage > 4) {\n      markup += `<li  class=\"pagination__item dotsLeft\">...</span>`;\n    }\n    if (currentPage > 3) {\n      markup += `<li  class=\"pagination__item\">${beforeTwoPage}</li>`;\n    }\n    if (currentPage > 2) {\n      markup += `<li  class=\"pagination__item\">${beforePage}</li>`;\n    }\n    markup += `<li class=\"pagination__item pagination__item--active\">${currentPage}</li>`;\n    if (allPages - 1 > currentPage) {\n      markup += `<li  class=\"pagination__item\">${afterPage}</li>`;\n    }\n    if (allPages - 2 > currentPage) {\n      markup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n    }\n    if (allPages - 3 > currentPage) {\n      markup += `<li  class=\"pagination__item dotsRight\">...</li>`;\n    }\n    if (allPages > currentPage) {\n      markup += `<li  class=\"pagination__item\">${allPages}</li>`;\n      markup += `<li  class=\"pagination__item arrow-right\">&#129146;</li>`;\n    }\n  } else {\n    if (currentPage > 3) {\n      markup += `<li  class=\"pagination__item\">${beforeTwoPage}</li>`;\n    }\n    if (currentPage > 2) {\n      markup += `<li  class=\"pagination__item\">${beforePage}</li>`;\n    }\n    markup += `<li class=\"pagination__item pagination__item--active\">${currentPage}</li>`;\n    if (allPages - 1 > currentPage) {\n      markup += `<li  class=\"pagination__item\">${afterPage}</li>`;\n    }\n    if (allPages - 2 > currentPage) {\n      markup += `<li class=\"pagination__item\">${afterTwoPage}</li>`;\n    }\n    if (allPages > currentPage) {\n      markup += `<li  class=\"pagination__item\">${allPages}</li>`;\n      markup += `<li  class=\"pagination__item arrow-right\">&#129146;</li>`;\n    }\n  }\n  if (!allPages) {\n    markup = '';\n  }\n  paginationBox.innerHTML = markup;\n  // window.scrollTo(0, 0);\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\npaginationBox.addEventListener('click', handlerPagination);\nfunction handlerPagination(evt) {\n  if (!searched) {\n    if (evt.target.nodeName !== 'LI') {\n      return;\n    }\n    if (evt.target.textContent === '...') {\n      return;\n    }\n    if (evt.target.textContent === '🡸') {\n      getPopular((globalCurrentpage -= 1)).then(\n        ({ results, page, total_pages }) => {\n          renderMarkup(results);\n          pagination(page, total_pages);\n        }\n      );\n      return;\n    }\n    if (evt.target.textContent === '🡺') {\n      getPopular((globalCurrentpage += 1)).then(\n        ({ results, page, total_pages }) => {\n          renderMarkup(results);\n          pagination(page, total_pages);\n        }\n      );\n      return;\n    }\n    //\n    const page = evt.target.textContent;\n\n    getPopular(page).then(({ results, page, total_pages }) => {\n      renderMarkup(results);\n      pagination(page, total_pages);\n    });\n  } else {\n    if (evt.target.nodeName !== 'LI') {\n      return;\n    }\n    if (evt.target.textContent === '...') {\n      return;\n    }\n    if (evt.target.textContent === '🡸') {\n      getByName(searched, (globalCurrentpage -= 1)).then(\n        ({ results, page, total_pages }) => {\n          renderMarkup(results);\n          pagination(page, total_pages);\n        }\n      );\n      return;\n    }\n    if (evt.target.textContent === '🡺') {\n      getByName(searched, (globalCurrentpage += 1)).then(\n        ({ results, page, total_pages }) => {\n          renderMarkup(results);\n          pagination(page, total_pages);\n        }\n      );\n      return;\n    }\n\n    const page = evt.target.textContent;\n\n    getByName(searched, page).then(({ results, page, total_pages }) => {\n      renderMarkup(results);\n      pagination(page, total_pages);\n    });\n  }\n}\n"],"names":["$2shzp","parcelRequire","$b18fd23e9761f35d$var$searchForm","document","querySelector","$b18fd23e9761f35d$var$searchInput","$b18fd23e9761f35d$var$notification","$b18fd23e9761f35d$export$72471ff1c507d2f6","async","$b18fd23e9761f35d$export$6fc04a76f170c279","name","page","data","default","get","addEventListener","event","classList","add","preventDefault","$dSs1Y","Loading","standard","remove","elements","search","currentTarget","value","length","$iQIUW","Notify","warning","reset","results","total_pages","trim","cardsList","innerHTML","Array","isArray","$ff1fb5e2e4d3490a$export$add40575555c273c","$1bab9c519cfa82bc$export$22fa394f3ba39578","error","console","log","$1bab9c519cfa82bc$var$paginationBox","$1bab9c519cfa82bc$var$globalCurrentpage","currentPage","allPages","markup","beforeTwoPage","beforePage","afterPage","afterTwoPage","window","innerWidth","scrollTo","top","behavior","evt","target","nodeName","textContent","then","page3","$ff1fb5e2e4d3490a$export$4c00e43813fefca2","$ff1fb5e2e4d3490a$export$2e423f4a20fb9b24","location","pathname","$ff1fb5e2e4d3490a$var$GENRES","genres","$ff1fb5e2e4d3490a$export$c5604fa8028da00","$ff1fb5e2e4d3490a$var$loadPopular","page1","movies","map","movie","id","poster_path","title","allGenres","genreIds","genresName","reduce","acc","genre","includes","slice","$ff1fb5e2e4d3490a$export$8de900fd9affe02f","genre_ids","join","release_date","split","insertAdjacentHTML"],"version":3,"file":"index.b815b397.js.map"}