{"mappings":"kgBAKA,MAAMA,EAAYC,SAASC,cAAc,gBACnCC,EAAaF,SAASC,cAAc,wBACpCE,EAAWH,SAASC,cAAc,sBAExC,IAAIG,EAAa,GAkCjB,SAASC,EAAoBC,GAC3B,MAAMC,EAASD,EACZE,KAAIC,GACI,oCAAoCA,EAAMC,sFAI3CD,EAAMC,0IAKgCD,EAAME,4GAInBF,EAAMG,gDA8C3C,SAA8BC,GAC5B,MAAMC,EAAaD,EAAYL,KAAIO,GAASA,EAAMC,OAClD,OAAOF,EAAWG,OAAS,EAAIH,EAAWI,MAAM,EAAG,GAAKJ,C,CA/CvBK,CAAqBV,EAAMW,QAAQC,KAC1D,WAEJZ,EAAMa,aAAaC,MAAM,KAAK,iCACDd,EAAMe,aAAaC,QAAQ,iCAG3DJ,KAAK,IACRtB,EAAU2B,mBAAmB,YAAanB,GAClBP,SAAS2B,iBAAiB,uBAClCC,SAAQC,IACtBA,EAAIC,iBAAiB,QAASC,EAAM,G,CAIxC,SAASA,EAAMC,GACb,MAAMC,EAAUC,OAAOF,EAAEG,OAAOC,QAAQ1B,IAExC,OADA2B,QAAQC,IAAIL,GACJ7B,GACN,IAAK,UACHL,EAAUwC,UAAY,GACtB,MACMC,EADgBC,KAAKC,MAAMC,aAAaC,QAAQ,YACtBC,QAAO,EAACnC,GAAEA,KAASA,IAAOuB,IAG1D,GAFAI,QAAQC,IAAIE,GACZG,aAAaG,QAAQ,UAAWL,KAAKM,UAAUP,KAC1CA,EAAUvB,OACb,OAAO+B,EAAAC,OAAOC,KAAK,oBAErB7C,EAAoBmC,GACpB,MACF,IAAK,QACHzC,EAAUwC,UAAY,GACtB,MACMY,EADcV,KAAKC,MAAMC,aAAaC,QAAQ,UACtBC,QAAO,EAACnC,GAAEA,KAASA,IAAOuB,IAExD,GADAU,aAAaG,QAAQ,QAASL,KAAKM,UAAUI,KACxCA,EAAUlC,OACb,OAAO+B,EAAAC,OAAOC,KAAK,oBAErB7C,EAAoB8C,G,CAvF1BjD,EAAW4B,iBAAiB,SAQ5B,WACE1B,EAAa,UACbgD,EAAAC,QAAQC,WACRF,EAAAC,QAAQE,OAAO,KACfxD,EAAUwC,UAAY,GACtB,MAAMiB,EAAgBf,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACrE,IAAKY,EAAcvC,OACjB,OAAO+B,EAAAC,OAAOC,KAAK,oBAErB7C,EAAoBmD,E,IAhBtBrD,EAAS2B,iBAAiB,SAmB1B,WACE1B,EAAa,QACbgD,EAAAC,QAAQC,WACRF,EAAAC,QAAQE,OAAO,KACfxD,EAAUwC,UAAY,GACtB,MAAMkB,EAAchB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GACjE,IAAKa,EAAYxC,OACf,OAAO+B,EAAAC,OAAOC,KAAK,oBAErB7C,EAAoBoD,E,IA1BlBC,OAAOC,SAASC,SAClB1D,EAAW2D,QACX3D,EAAW4D,Q","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst cardsList = document.querySelector('.cards__list');\nconst watchedBtn = document.querySelector('.filter-watched__btn');\nconst queueBtn = document.querySelector('.filter-queue__btn');\n// const cardsRemoveItem = document.querySelector('.cards__remove-item');\nlet currentTab = '';\n\nwatchedBtn.addEventListener('click', renderWatched);\nqueueBtn.addEventListener('click', renderQueue);\n\nif (window.location.pathname === '/library.html' || '/project/library.html') {\n  watchedBtn.focus();\n  watchedBtn.click();\n}\n\nfunction renderWatched() {\n  currentTab = 'watched';\n  Loading.standard();\n  Loading.remove(800);\n  cardsList.innerHTML = '';\n  const watchedMovies = JSON.parse(localStorage.getItem('watched')) || [];\n  if (!watchedMovies.length) {\n    return Notify.info('No added movies!');\n  }\n  renderMarkupLibrary(watchedMovies);\n}\n\nfunction renderQueue() {\n  currentTab = 'queue';\n  Loading.standard();\n  Loading.remove(800);\n  cardsList.innerHTML = '';\n  const queueMovies = JSON.parse(localStorage.getItem('queue')) || [];\n  if (!queueMovies.length) {\n    return Notify.info('No added movies!');\n  }\n  renderMarkupLibrary(queueMovies);\n}\n\nfunction renderMarkupLibrary(movies) {\n  const markup = movies\n    .map(movie => {\n      return `<li class=\"cards__item\" data-id=\"${movie.id}\">\n\n     \n          <button type=\"submit\" class=\"cards__remove-item\" data-id=\"${\n            movie.id\n          }\">-</button>\n      <img\n            class=\"cards__photo\"\n            alt=\"movie\"\n            src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\"\n            \n            loading=\"lazy\"\n          />\n          <h3 class=\"cards__title\">${movie.title}</h3>\n          <p class=\"cards__info\">${getGenresNameLibrary(movie.genres).join(\n            ', '\n          )} | ${\n        movie.release_date.split('-')[0]\n      } <span class=\"cards__vote\"> ${movie.vote_average.toFixed(1)}</span></p>\n        </li>`;\n    })\n    .join('');\n  cardsList.insertAdjacentHTML('beforeend', markup);\n  const cardsRemoveItem = document.querySelectorAll('.cards__remove-item');\n  cardsRemoveItem.forEach(btn => {\n    btn.addEventListener('click', onBtn);\n  });\n}\n\nfunction onBtn(e) {\n  const movieId = Number(e.target.dataset.id);\n  console.log(movieId);\n  switch (currentTab) {\n    case 'watched':\n      cardsList.innerHTML = '';\n      const watchedMovies = JSON.parse(localStorage.getItem('watched'));\n      const filteredW = watchedMovies.filter(({ id }) => id !== movieId);\n      console.log(filteredW);\n      localStorage.setItem('watched', JSON.stringify(filteredW));\n      if (!filteredW.length) {\n        return Notify.info('No added movies!');\n      }\n      renderMarkupLibrary(filteredW);\n      break;\n    case 'queue':\n      cardsList.innerHTML = '';\n      const queueMovies = JSON.parse(localStorage.getItem('queue'));\n      const filteredQ = queueMovies.filter(({ id }) => id !== movieId);\n      localStorage.setItem('queue', JSON.stringify(filteredQ));\n      if (!filteredQ.length) {\n        return Notify.info('No added movies!');\n      }\n      renderMarkupLibrary(filteredQ);\n      break;\n    default:\n      break;\n  }\n}\n\nfunction getGenresNameLibrary(movieGenres) {\n  const genresName = movieGenres.map(genre => genre.name);\n  return genresName.length > 2 ? genresName.slice(0, 2) : genresName;\n}\n"],"names":["$1cafa503bc57b7a0$var$cardsList","document","querySelector","$1cafa503bc57b7a0$var$watchedBtn","$1cafa503bc57b7a0$var$queueBtn","$1cafa503bc57b7a0$var$currentTab","$1cafa503bc57b7a0$var$renderMarkupLibrary","movies","markup","map","movie","id","poster_path","title","movieGenres","genresName","genre","name","length","slice","$1cafa503bc57b7a0$var$getGenresNameLibrary","genres","join","release_date","split","vote_average","toFixed","insertAdjacentHTML","querySelectorAll","forEach","btn","addEventListener","$1cafa503bc57b7a0$var$onBtn","e","movieId","Number","target","dataset","console","log","innerHTML","filteredW","JSON","parse","localStorage","getItem","filter","setItem","stringify","$iQIUW","Notify","info","filteredQ","$dSs1Y","Loading","standard","remove","watchedMovies","queueMovies","window","location","pathname","focus","click"],"version":3,"file":"library.e5d2550a.js.map"}